import 'package:location/location.dart';
import 'package:ccima/services/networking.dart';

const apiKey = 'e72ca729af228beabd5d20e3b7749713';
const openWeatherMapURL = 'https://api.openweathermap.org/data/2.5/weather';

class WeatherModel {
  Future<dynamic> _getWeatherData(String url) async {
    try {
      NetworkHelper networkHelper = NetworkHelper(url);
      var weatherData = await networkHelper.getData();
      return weatherData;
    } catch (e) {
      print('L·ªói khi l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt: $e');
      return null; // Tr·∫£ v·ªÅ null n·∫øu c√≥ l·ªói
    }
  }

  Future<dynamic> getCityWeather(String cityName) async {
    String url = '$openWeatherMapURL?q=$cityName&appid=$apiKey&units=metric';
    return await _getWeatherData(url); // T√°i s·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c
  }

  Future<dynamic> getLocationWeather() async {
    Location location = Location();

    // Ki·ªÉm tra quy·ªÅn truy c·∫≠p v·ªã tr√≠ tr∆∞·ªõc khi l·∫•y v·ªã tr√≠
    bool serviceEnabled = await location.serviceEnabled();
    if (!serviceEnabled) {
      serviceEnabled = await location.requestService();
      if (!serviceEnabled) {
        return null; // N·∫øu kh√¥ng c√≥ quy·ªÅn truy c·∫≠p, tr·∫£ v·ªÅ null
      }
    }

    PermissionStatus permissionStatus = await location.hasPermission();
    if (permissionStatus == PermissionStatus.denied) {
      permissionStatus = await location.requestPermission();
      if (permissionStatus != PermissionStatus.granted) {
        return null; // N·∫øu kh√¥ng ƒë∆∞·ª£c c·∫•p quy·ªÅn, tr·∫£ v·ªÅ null
      }
    }

    // L·∫•y v·ªã tr√≠ ng∆∞·ªùi d√πng
    LocationData locationData = await location.getLocation();

    String url =
        '$openWeatherMapURL?lat=${locationData.latitude}&lon=${locationData.longitude}&appid=$apiKey&units=metric';
    return await _getWeatherData(url); // T√°i s·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c
  }

  String getWeatherIcon(int condition) {
    if (condition < 300) {
      return 'üå©'; // B√£o
    } else if (condition < 400) {
      return 'üåß'; // M∆∞a nh·ªè
    } else if (condition < 600) {
      return '‚òîÔ∏è'; // M∆∞a
    } else if (condition < 700) {
      return '‚òÉÔ∏è'; // Tuy·∫øt
    } else if (condition < 800) {
      return 'üå´'; // M√π
    } else if (condition == 800) {
      return '‚òÄÔ∏è'; // Tr·ªùi quang ƒë√£ng
    } else if (condition <= 804) {
      return '‚òÅÔ∏è'; // M√¢y
    } else {
      return 'ü§∑‚Äç'; // Kh√¥ng r√µ
    }
  }

  String getMessage(int temp) {
    if (temp > 25) {
      return 'Th·ªùi gian ƒÉn kem üç¶';
    } else if (temp > 20) {
      return 'Th·ªùi gian m·∫∑c qu·∫ßn ƒë√πi v√† √°o thun üëï';
    } else if (temp < 10) {
      return 'B·∫°n s·∫Ω c·∫ßn khƒÉn qu√†ng v√† gƒÉng tay üß£ üß§';
    } else {
      return 'Mang theo √°o kho√°c üß• ph√≤ng khi tr·ªùi l·∫°nh';
    }
  }
}
